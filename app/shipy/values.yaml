provision:
  jaeger: true
  rabbitmq: true
  mssql-linux: true

rabbitmq:
  persistence:
    enabled: false
  auth:
    username: "admin"
    password: "HelmMaestro123"

mssql-linux:
  sapassword: "HelmMaestro123"
  persistence:
    enabled: false

jaeger:
  provisionDataStore:
    cassandra: false
  allInOne:
    enabled: true # for dev/test purposes!
    ingress:
      enabled: false
  storage:
    type: none
  agent:
    enabled: false
  collector:
    enabled: false
  query:
    enabled: false

ingress:
  enabled: true
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: shipy.local
      paths:
        - path: /
          pathType: ImplementationSpecific
          backend:
            service:
              nameSuffix: webapp 
              port:
                number: 7000
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

common:
  dbPassword: "HelmMaestro123"
  environment:
    - name: ASPNETCORE_ENVIRONMENT
      value: Production
    - name: OTEL_EXPORTER_JAEGER_AGENT_HOST
      value: "{{ .Release.Name }}-jaeger-agent.{{ .Release.Namespace }}.svc.cluster.local"
    - name: OTEL_EXPORTER_JAEGER_AGENT_PORT
      value: "6831"
    - name: OTEL_EXPORTER_JAEGER_ENDPOINT
      value: "http://{{ .Release.Name }}-jaeger-collector.{{ .Release.Namespace }}.svc.cluster.local:14268"

webapp:
  replicaCount: 1
  image:
    repository: k8smaestro/shipy-webapp
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "1.2"

  container:
    name: ""

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  livenessProbe:
    enabled: true
    path: "/health"
    port: "http"
  readinessProbe:
    enabled: true
    path: "/health"
    port: "http"

  environment:
    - name: APIServiceLocations__CustomerManagementAPI
      value: "{{ .Chart.Name }}-customerapi.{{ .Release.Namespace }}.svc.cluster.local:5100"
    - name: APIServiceLocations__ShipManagementAPI
      value: "{{ .Chart.Name }}-shipapi.{{ .Release.Namespace }}.svc.cluster.local:5000"
    - name: APIServiceLocations__WorkshopManagementAPI
      value: "{{ .Chart.Name }}-workshopapi.{{ .Release.Namespace }}.svc.cluster.local:5200" 

  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}

  service:
    type: ClusterIP
    port: 7000

  resources:
    requests:
      memory: 64Mi
      cpu: 64m
    limits:
      memory: 128Mi
      cpu: 256m

  nodeSelector: {}

  tolerations: []

  affinity: {}

customerapi:
  replicaCount: 1
  image:
    repository: k8smaestro/shipy-customermanagementapi
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "1.2"

  container:
    name: ""

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  livenessProbe:
    enabled: true
    path: "/healtz"
    port: "http"
  readinessProbe:
    enabled: true
    path: "/healtz"
    port: "http"

  environment:
    - name: RabbitMQPublisher__Host
      value: "{{ .Release.Name }}-rabbitmq"
    - name: RabbitMQPublisher__Username
      value: "{{ .Values.rabbitmq.auth.username }}"
    - name: RabbitMQPublisher__Password
      value: "{{ .Values.rabbitmq.auth.password }}"
    - name: ConnectionStrings__CustomerManagementCN
      value: "server=mssql-linux;user id=sa;password={{ .Values.common.dbPassword }};database=CustomerManagement;"

  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}

  service:
    type: ClusterIP
    port: 5100

  resources:
    requests:
      memory: 64Mi
      cpu: 64m
    limits:
      memory: 128Mi
      cpu: 256m

  nodeSelector: {}

  tolerations: []

  affinity: {}

shipapi:
  replicaCount: 1
  image:
    repository: k8smaestro/shipy-shipmanagementapi
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "1.2"

  container:
    name: ""

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  livenessProbe:
    enabled: true
    path: "/healtz"
    port: "http"
  readinessProbe:
    enabled: true
    path: "/healtz"
    port: "http"

  environment:
    - name: RabbitMQPublisher__Host
      value: "{{ .Release.Name }}-rabbitmq"
    - name: RabbitMQPublisher__Username
      value: "{{ .Values.rabbitmq.auth.username }}"
    - name: RabbitMQPublisher__Password
      value: "{{ .Values.rabbitmq.auth.password }}"
    - name: ConnectionStrings__ShipManagementCN
      value: "server=mssql-linux;user id=sa;password={{ .Values.common.dbPassword }};database=ShipManagement;"

  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}

  service:
    type: ClusterIP
    port: 5000

  resources:
    requests:
      memory: 64Mi
      cpu: 64m
    limits:
      memory: 128Mi
      cpu: 256m

  nodeSelector: {}

  tolerations: []

  affinity: {}

workshopapi:
  replicaCount: 1
  image:
    repository: k8smaestro/shipy-workshopmanagementapi
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "1.2"

  container:
    name: ""

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  livenessProbe:
    enabled: true
    path: "/healtz"
    port: "http"
  readinessProbe:
    enabled: true
    path: "/healtz"
    port: "http"

  environment:
    - name: RabbitMQPublisher__Host
      value: "{{ .Release.Name }}-rabbitmq"
    - name: RabbitMQPublisher__Username
      value: "{{ .Values.rabbitmq.auth.username }}"
    - name: RabbitMQPublisher__Password
      value: "{{ .Values.rabbitmq.auth.password }}"
    - name: ConnectionStrings__WorkshopManagementCN
      value: "server=mssql-linux;user id=sa;password={{ .Values.common.dbPassword }};database=WorkshopManagement;"
    - name: ConnectionStrings__EventStoreCN
      value: "server=mssql-linux;user id=sa;password={{ .Values.common.dbPassword }};database=WorkshopManagementEventStore;"

  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}

  service:
    type: ClusterIP
    port: 5200

  resources:
    requests:
      memory: 64Mi
      cpu: 64m
    limits:
      memory: 128Mi
      cpu: 256m

  nodeSelector: {}

  tolerations: []

  affinity: {}

eventlogservice:
  replicaCount: 1
  image:
    repository: k8smaestro/shipy-eventlogservice
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "1.2"

  container:
    name: ""

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  environment:
    - name: DOTNET_ENVIRONMENT
      value: Production
    - name: RabbitMQHandler__Host
      value: "{{ .Release.Name }}-rabbitmq"
    - name: RabbitMQHandler__Username
      value: "{{ .Values.rabbitmq.auth.username }}"
    - name: RabbitMQHandler__Password
      value: "{{ .Values.rabbitmq.auth.password }}"

  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}

  resources:
    requests:
      memory: 64Mi
      cpu: 64m
    limits:
      memory: 128Mi
      cpu: 256m

  nodeSelector: {}

  tolerations: []

  affinity: {}

workshopeventhandler:
  replicaCount: 1
  image:
    repository: k8smaestro/shipy-workshopmanagementeventhandler
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "1.2"

  container:
    name: ""

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  environment:
    - name: DOTNET_ENVIRONMENT
      value: Production
    - name: RabbitMQHandler__Host
      value: "{{ .Release.Name }}-rabbitmq"
    - name: RabbitMQHandler__Username
      value: "{{ .Values.rabbitmq.auth.username }}"
    - name: RabbitMQHandler__Password
      value: "{{ .Values.rabbitmq.auth.password }}"
    - name: RabbitMQ__Host
      value: "{{ .Release.Name }}-rabbitmq"
    - name: RabbitMQ__Username
      value: "{{ .Values.rabbitmq.auth.username }}"
    - name: RabbitMQ__Password
      value: "{{ .Values.rabbitmq.auth.password }}"
    - name: ConnectionStrings__WorkshopManagementCN
      value: "server=mssql-linux;user id=sa;password={{ .Values.common.dbPassword }};database=WorkshopManagement;"

  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}

  resources:
    requests:
      memory: 64Mi
      cpu: 64m
    limits:
      memory: 512Mi
      cpu: 500m

  nodeSelector: {}

  tolerations: []

  affinity: {}

invoiceservice:
  replicaCount: 1
  image:
    repository: k8smaestro/shipy-invoiceservice
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "1.2"

  container:
    name: ""

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  environment:
    - name: DOTNET_ENVIRONMENT
      value: Production
    - name: RabbitMQHandler__Host
      value: "{{ .Release.Name }}-rabbitmq"
    - name: RabbitMQHandler__Username
      value: "{{ .Values.rabbitmq.auth.username }}"
    - name: RabbitMQHandler__Password
      value: "{{ .Values.rabbitmq.auth.password }}"
    - name: ConnectionStrings__InvoiceServiceCN
      value: "server=mssql-linux;user id=sa;password={{ .Values.common.dbPassword }};database=Invoicing;"

  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}

  resources:
    requests:
      memory: 64Mi
      cpu: 64m
    limits:
      memory: 128Mi
      cpu: 256m

  nodeSelector: {}

  tolerations: []

  affinity: {}

notificationservice:
  replicaCount: 1
  image:
    repository: k8smaestro/shipy-notificationservice
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "1.2"

  container:
    name: ""

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  environment:
    - name: DOTNET_ENVIRONMENT
      value: Production
    - name: RabbitMQHandler__Host
      value: "{{ .Release.Name }}-rabbitmq"
    - name: RabbitMQHandler__Username
      value: "{{ .Values.rabbitmq.auth.username }}"
    - name: RabbitMQHandler__Password
      value: "{{ .Values.rabbitmq.auth.password }}"
    - name: ConnectionStrings__NotificationServiceCN
      value: "server=mssql-linux;user id=sa;password={{ .Values.common.dbPassword }};database=Notification;"

  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}

  resources:
    requests:
      memory: 64Mi
      cpu: 64m
    limits:
      memory: 128Mi
      cpu: 256m

  nodeSelector: {}

  tolerations: []

  affinity: {}